@using RSI.Mvc.Web.ViewModel
@using Kendo.Mvc.UI
@model PlanFechaViewModel

<script>
    function index(dataItem) {
        var data = $("#DetalleItems").data("kendoGrid").dataSource.data();
        return data.indexOf(dataItem);
    }
    function dropIndex(dataItem) {
         dataItem.ConceptoValorId = dataItem.EntityConceptoValor.Id;
        var data = $("#DetalleItems").data("kendoGrid").dataSource.data();
        return data.indexOf(dataItem);
    }
    function agregarRegistro() {
        var size = $("#DetalleItems").data("kendoGrid").dataSource.view().length;
        var data = $("#DetalleItems").data("kendoGrid").columns;
        var fields = {};
        data.forEach(function (item) {
            fields[item.field] = " ";
        });
        if (size <= 60) {
             var acomodacion = @Html.Raw(Json.Encode(ViewData["defaultConceptoValor"]));     
            fields["Id"] = 0;
            fields["PlanFechaId"] =@Model.Id;
            fields["ConceptoValorId"] = acomodacion.Id;
            fields["EntityConceptoValor"] = acomodacion;
            fields["Cantidad"] = "";
            fields["Valor"] = "";
            fields["Observacion"] = "";
            $("#DetalleItems").data("kendoGrid").dataSource.add(fields);
        }
    }
    function resetRango() {
        $("#DetalleItems").data("kendoGrid").dataSource.data([]);
        $("#DetalleItems").data("kendoGrid").dataSource.read();
    }
    function onSave() {
        $("#DetalleItems").data("kendoGrid").refresh();
    }
   
    var rowIndex = null;
    var cellIndex = null;
    function onDataBinding(e) {
        var current = e.sender.current() || [];
        if (current[0]) {
            cellIndex = current.index();
            rowIndex = current.parent().index();
        }
    }
    function onDataBound(e) {
        if (!isNaN(cellIndex)) {
            e.sender.current(e.sender.tbody.children().eq(rowIndex).children().eq(cellIndex));
            rowIndex = cellIndex = null;
        }
    }
    function seleccionarAcomodacion() {
        var estrategia = $("#Acomodacion").data("kendoDropDownList").value();
        var grid = $("#DetalleItems").data("kendoGrid");
        var items = grid.dataSource.data();
        for (var i = 0; i < items.length; i++) {
            items[i].set("AutorizacionId", estrategia);
        }

        var rows = grid.items();
        for (var i = 0; i < rows.length; i++) {
            $(rows[i].cells[1]).addClass("k-dirty-cell");
            $(rows[i].cells[1]).append("<span class='k-dirty'></span>");
        }
    }
</script>
<div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
        <div class="modal-header bg-success">
            <h4 class="modal-title" style="display: inline-block;">Nuevo Cupos por acomodación</h4>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span class="text-white" aria-hidden="true">&times;</span>
            </button>
        </div>
        <br />
        <div class="modal-body">

            <div id="mensajesModalLabel"></div>

            @using (Html.BeginForm("_CreateDetalleGrid", "PlanFecha", FormMethod.Post, new { id = "Form" }))
            {
                @Html.HiddenFor(m => m.Id)

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div id="IncludInputGrid">
                        @(Html.Kendo().Grid<CuposAcomodacionViewModel>(Model.CuposAcomodacion)
                                .Name("DetalleItems")
                                .HtmlAttributes(new { @class = "gridListaDetalle" })
                                .Scrollable(s => s.Enabled(true).Height(450))
                                .Navigatable()
                                .Columns(col =>
                                {
                                col.Bound(c => c.Id).Hidden().ClientTemplate("#=Id#"+"<input type='hidden' name='CuposAcomodacion[#= index(data)#].Id' value='#=Id#'/>");
                                col.Bound(c => c.PlanFechaId).Hidden().ClientTemplate("#=PlanFechaId#"+"<input type='hidden' name='CuposAcomodacion[#= index(data)#].PlanFechaId' value='#=PlanFechaId#'/>");
                                col.Bound(c => c.EntityConceptoValor).ClientTemplate("#= data.EntityConceptoValor.Valor#"+"<input type='hidden' name='CuposAcomodacion[#= dropIndex(data)#].ConceptoValorId' value='#=ConceptoValorId#'/>");
                                col.Bound(c => c.Valor).ClientTemplate("#=Valor#<input type='hidden' name='CuposAcomodacion[#= index(data)#].Valor' value='#=Valor#'/>");
                                col.Bound(c => c.Cantidad).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal" })
                                                   .ClientTemplate("#=Cantidad#<input type='hidden' name='CuposAcomodacion[#= index(data)#].Cantidad' value='#=Cantidad#'/>");
                                col.Bound(c => c.Observacion).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal" })
                                                   .ClientTemplate("#=Observacion#<input type='hidden' name='CuposAcomodacion[#= index(data)#].Observacion' value='#=Observacion#'/>");
                                col.Template(@<text></text>).Width(60).Title("")
                                        .ClientTemplate(
                                            @"<div style='display: flex; justify-content: space-around;'>" +
                                            @"<button class='btn btn-circle btn-danger k-grid-delete' role='button'" +
                                            @"      data-toggle='tooltip' data-placement='top' title='Eliminar'><i class='fa fa-close' aria-hidden='true'></i></button>" +
                                                @"</div>"
                                            );

                })
                .ToolBar(toolbar =>
                {
                    toolbar.Template(
                    @<text>
                        <button class='btn btn-success' id='btnAdd' style='float: left; margin: 10px 10px 10px 10px;' type='button'
                                onClick='agregarRegistro()' data-toggle='tooltip' data-placement='top' title='Agregar Detalle PlanFecha'>
                            <i class='fa fa-plus' aria-hidden='true'></i> Agregar
                        </button>

                        <div style="text-align: right">
                            <button class='btn btn-danger' id='btnReset'
                                    style='margin: 10px 10px 10px 10px;' type='button'
                                    onClick='resetRango()' data-toggle='tooltip' data-placement='top' title='Resetear'>
                                Deshacer cambios
                            </button>
                        </div>

                    </text>);
                })
            .Editable(editable =>
            {
                editable.Mode(GridEditMode.InCell);
                editable.CreateAt(GridInsertRowPosition.Bottom);
                editable.DisplayDeleteConfirmation("¿Está seguro de esta acción?");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(25)
                .Sort(sort => sort.Add("Valor").Ascending())
                .Model(model =>
                {
                    model.Id("Id");
                    model.Field("Id",typeof(int)).Editable(false);
                    model.Field("PlanFechaId", typeof(int)).Editable(false).DefaultValue(Model.Id);
                    model.Field("Valor", typeof(double)).Editable(true);
                    model.Field("ConceptoValorId", typeof(int)).Editable(true);
                    model.Field("Cantidad", typeof(string)).Editable(true);
                    model.Field("Observacion", typeof(string)).Editable(true);
                    model.Field("EntityConceptoValor",typeof(ConceptoValorViewModel)).Editable(true);
                })

                .ServerOperation(false)
            ))
                        <div class="modal-footer" style="background: white; margin: 0; padding: 0;">
                            <br />
                            <button type="button" onclick="jsonCommun.ajaxPostCrear('@Url.Action("_CreateDetalleGrid", "PlanFecha")','GridDetalle_@Model.Id')" value="Crear" class="btn btn-success" style='margin: 10px 0 20px 0'><i class='fa fa-check' aria-hidden='true'></i> Guardar</button>
                            <button type="button" class="btn btn-default" style='margin: 10px 0 20px 0' data-dismiss="modal"><i class='fa fa-close' aria-hidden='true' onclick="onCancel"></i> Cancelar</button>
                            <br />
                        </div>
                    </div>
                    <br />
                </div>
            }
        </div>
    </div>
</div>


