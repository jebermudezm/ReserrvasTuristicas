@using RSI.Mvc.Web.ViewModel
@model IEnumerable<ProveedorViewModel>


<style>
    #gridDatosProveedor .k-grid-header .k-header {
        overflow: visible !important;
        white-space: normal !important;
    }
</style>

@{
    ViewBag.Title = "Index";
    TempData["ModuleName"] = "Administración Proveedores";
}

<br />

@Html.AntiForgeryToken()

@(Html.Kendo().Grid(Model)
              .Name("gridDatosProveedor")
              .Columns(columns =>
              {
                  columns.Bound(c => c.Id).Visible(false);
                  columns.Bound(c => c.DocumentoIdentidadId).Visible(false);
                  columns.Bound(c => c.TipoDocumento).Visible(true);
                  columns.Bound(c => c.TipoPersona).Visible(true);
                  columns.Bound(c => c.NumeroDocumentoIdentidad).Width(100);
                  columns.Bound(c => c.NombreORazonSocial);
                  columns.Bound(c => c.Contacto);
                  columns.Bound(c => c.Direccion).Visible(true);
                  columns.Bound(c => c.Telefono);
                  columns.Bound(c => c.Correo);
                  columns.Bound(c => c.Observacion);
                  columns.Bound(c => c.CreadoPor).Visible(false);
                  columns.Bound(c => c.FechaCreacion).Visible(false);
                  columns.Bound(c => c.ModificadoPor).Visible(false);
                  columns.Bound(c => c.FechaModificacion).Visible(false);
                  columns.Bound(c => c.Id).Title("Opciones").Width(140).Filterable(false)
                    .ClientTemplate(
                        @"<div style='display: flex; justify-content: space-between;'>" +
                            @"<button class='btn btn-circle btn-info' role='button' onClick='ajaxGetProveedor("" " + Url.Action("_Details", "Proveedor", new { id = "#=Id#" }) + @" "")'" +
                            @"    data-toggle='tooltip' data-placement='top' title='Ver'><i class='fa fa-eye' aria-hidden='true'></i></button>" +

                            @"<button class='btn btn-circle btn-warning' role='button' onClick='ajaxGetProveedor("" " + Url.Action("_Edit", "Proveedor", new { id = "#=Id#" }) + @" "")'" +
                            @"    data-toggle='tooltip' data-placement='top' title='Editar'><i class='fa fa-edit' aria-hidden='true'></i></button>" +

                            @"<button class='btn btn-circle btn-danger' role='button' onClick='ajaxGetProveedor("" " + Url.Action("_Delete", "Proveedor", new { id = "#=Id#" }) + @" "")'" +
                            @"    data-toggle='tooltip' data-placement='top' title='Eliminar'><i class='fa fa-close' aria-hidden='true'></i></button>" +
                        @"</div>"
                  );
              })
              .Sortable()
              .Pageable(pageable => pageable
                  .Refresh(true)
                  .PageSizes(true)
                  .ButtonCount(5))
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .PageSize(15)
                  .ServerOperation(false)
                  .Read(read => read.Action("Index_Read", "Proveedor"))
              )
              .ToolBar(tb =>
              {
              tb.Template(
        @<text>
            <button class='btn btn-success' id='btnNuevoProveedor' type='button' onclick="ajaxGetProveedor('@Url.Action("_Create", "Proveedor")')"><i class='fa fa-plus' aria-hidden='true'></i>Adicionar</button>
            <button class="k-button k-button-icontext k-grid-excel" style="background: RGB(33, 115, 70); padding: 5px 15px; color: white;"><i class='fa fa-file-excel-o' aria-hidden='true'></i> Exportar a Excel</button>
        </text>);
                      })
                       .Excel(excel => excel.FileName("Proveedores.xlsx").AllPages(true))
                       .Filterable(ftb => ftb
                       .Extra(false)
                       .Operators(operators => operators
                            .ForString(str => str
                            .Clear()
                            .StartsWith("Comienza con...")
                            .Contains("Contiene...")
                            )
                            .ForEnums(enu => enu
                            .Clear()
                            .IsEqualTo("Es igual a...")
                            )
                        )
                      )
)

@section scripts {
    <script src="~/Scripts/Proveedor.js"></script>
}
